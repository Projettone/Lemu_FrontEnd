/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CouponDto
import org.openapitools.client.models.PageableObject
import org.openapitools.client.models.SortObject

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param totalPages 
 * @param totalElements 
 * @param propertySize 
 * @param content 
 * @param number 
 * @param sort 
 * @param first 
 * @param last 
 * @param numberOfElements 
 * @param pageable 
 * @param empty 
 */

@JsonClass(generateAdapter = true)
data class PageCouponDto (

    @Json(name = "totalPages")
    val totalPages: kotlin.Int? = null,

    @Json(name = "totalElements")
    val totalElements: kotlin.Long? = null,

    @Json(name = "size")
    val propertySize: kotlin.Int? = null,

    @Json(name = "content")
    val content: kotlin.collections.List<CouponDto>? = null,

    @Json(name = "number")
    val number: kotlin.Int? = null,

    @Json(name = "sort")
    val sort: SortObject? = null,

    @Json(name = "first")
    val first: kotlin.Boolean? = null,

    @Json(name = "last")
    val last: kotlin.Boolean? = null,

    @Json(name = "numberOfElements")
    val numberOfElements: kotlin.Int? = null,

    @Json(name = "pageable")
    val pageable: PageableObject? = null,

    @Json(name = "empty")
    val empty: kotlin.Boolean? = null

) : List<CouponDto> {
    override val size: Int
        get() = TODO("Not yet implemented")

    override fun get(index: Int): CouponDto {
        TODO("Not yet implemented")
    }

    override fun isEmpty(): Boolean {
        TODO("Not yet implemented")
    }

    override fun iterator(): Iterator<CouponDto> {
        TODO("Not yet implemented")
    }

    override fun listIterator(): ListIterator<CouponDto> {
        TODO("Not yet implemented")
    }

    override fun listIterator(index: Int): ListIterator<CouponDto> {
        TODO("Not yet implemented")
    }

    override fun subList(fromIndex: Int, toIndex: Int): List<CouponDto> {
        TODO("Not yet implemented")
    }

    override fun lastIndexOf(element: CouponDto): Int {
        TODO("Not yet implemented")
    }

    override fun indexOf(element: CouponDto): Int {
        TODO("Not yet implemented")
    }

    override fun containsAll(elements: Collection<CouponDto>): Boolean {
        TODO("Not yet implemented")
    }

    override fun contains(element: CouponDto): Boolean {
        TODO("Not yet implemented")
    }


}

